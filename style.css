/*!
  Project:  shorts-player-kit
  File:     ./style.css
  Role:     Visual-only (veils/band/typography/effects + Debug UI scoped)
  Notes:
    - Debug UIは本CSSが唯一の見た目ソース。JSは状態（data属性/クラス/変数）だけ切替。
    - デバッグUIは #debugPanel / #debug-panel の両IDをサポート。
*/

/* ================== Root tokens ================== */
:root {
  /* Text & shadow (A=light / B=dark) */
  --txt-A: #2c2c2c;
  --bg-A: #f9f9f7;
  --shadow-A: 1px 1px 3px rgba(0, 0, 0, .25);
  --txt-B: #eaeaec;
  --bg-B: #1c1c1e;
  --shadow-B: 0 0 8px rgba(255, 255, 255, .25);

  /* App theme base（JS が documentElement の --bg-color を更新） */
  --bg-color: var(--bg-A);

  /* DebugPanel の実高 → 本文下マージンに反映（JSが更新想定） */
  --debug-panel-h: 0px;
  --content-pad-bottom: 0px; /* legacy fallback */

  /* Safe-Area / host-bias（JS が visualViewport から供給） */
  --sa-bottom: env(safe-area-inset-bottom, 0px);
  --host-bias-bottom: 0px;

  /* Band color (JS supplies) */
  --symbol-bg-color: transparent;

  /* Band tone tweak */
  --band-brightness: .92;
  --band-sat: 1.06;

  /* Hairlines (上下1px) */
  --band-line-width: 1px;
  --band-line-alpha-A: .06;
  --band-line-alpha-B: .12;

  /* Section tag */
  --section-tag-gap-bottom: .5rem;
  --section-tag-min: .8rem;
  --section-tag-fluid: 2.2vw;
  --section-tag-max: 1.0rem;
  --tag-radius: 999px;
  --tag-bg-alpha: .14;
  --tag-border-alpha-A: .10;
  --tag-border-alpha-B: .18;
  --tag-shadow-alpha: .12;

  /* ===== Tag (Chip) Contrast Tokens =====
     1) Fallback（HSL近似）
     2) @supports で OKLCH + color-mix に上書き
     3) JS が --tagchip-fg-auto に白/黒を供給（未設定なら #fff） */
  --tagchip-fg: var(--tagchip-fg-auto, #fff);
  /* Fallback: HSL */
  --tagchip-bg: hsl(210 16% 72%);
  --tagchip-stroke: hsl(210 12% 82%);

  /* Band paddings */
  --symbol-outer-gap-y: 1rem;
  --symbol-inner-gap-y: .30rem;

  /* Veils */
  --veilA-top: .12;
  --veilA-bottom: .06;
  --veilB-top: .32;
  --veilB-bottom: .18;

  /* ==== Debug tokens (scoped) ==== */
  --chip-fg: #ffffff;
  --dbg-panel-bg: rgba(0, 0, 0, .82);
  --chip-gap: 8px;
  --chip-pad-y: .28rem;
  --chip-pad-x: .6rem;
  --chip-radius: 999px;
  --chip-weight: 700;
  --chip-shadow: 0 0 0 rgba(0, 0, 0, 0);

  /* speaking / paused / pending colors */
  --chip-speaking-bg: #15803d;
  --chip-speaking-bd: #065f46;
  --chip-speaking-fg: #ffffff;
  --chip-paused-bg: #b45309;
  --chip-paused-bd: #92400e;
  --chip-paused-fg: #ffffff;
  --chip-pending-bg: #1d4ed8;
  --chip-pending-bd: #1e40af;
  --chip-pending-fg: #ffffff;

  /* QuickBar layout */
  --qb-row-h: 48px;
  --qb-gap-x: 8px;
  --qb-gap-y: 6px;

  /* === Flags buttons (TTS) tokens === */
  /* ON側は“speaking”系に寄せ、意味色の統一感を保つ */
  --flag-on-bg: var(--chip-speaking-bg);
  --flag-on-bd: var(--chip-speaking-bd);
  --flag-on-fg: var(--chip-speaking-fg);
  /* OFF側は半透明ホワイト系で控えめに */
  --flag-off-bg: rgba(255, 255, 255, .08);
  --flag-off-bd: rgba(255, 255, 255, .28);
  --flag-off-fg: #ffffff;
}

/* ========== Reset ========== */
* { box-sizing: border-box; margin: 0; padding: 0; }

/* ========== Root ========== */
html, body {
  width: 100%;
  overflow: hidden; /* 短編＝1画面想定 */
  font-family: 'Noto Sans JP', system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  transition: color .8s, background-color 1.2s;
  touch-action: manipulation;
}

/* 背景は --bg-color に統一（JSと矛盾しない） */
body { background-color: var(--bg-color); color: var(--txt-A); }

/* アプリ未有効化時：デバッグUI不可視（両ID対応） */
body.app-unactivated :is(#debug-panel, #debugPanel) {
  visibility: hidden;
  pointer-events: none;
}

/* Contrast hint（JSが text-on-dark/light を付与） */
body.text-on-dark { color: var(--txt-B); }
body.text-on-light { color: var(--txt-A); }

/* ========== Layout ========== */
#wrapper {
  position: relative; z-index: 1; width: 100%;
  height: var(--visual-viewport-h, 100vh);
  display: flex; flex-direction: column; justify-content: center; align-items: center;
  padding-bottom: var(--debug-panel-h, var(--content-pad-bottom, 0px));
  transition: height 0.2s ease-out;
}
@supports (height: 100dvh){ #wrapper { height: var(--visual-viewport-h, 100dvh); } }

/* Banner */
#banner {
  position: fixed; top: 0; left: 0; right: 0; width: 100%;
  padding: calc(.5rem + env(safe-area-inset-top, 0px)) .5rem .5rem;
  background: rgba(0, 0, 0, .30); color: #fff; text-align: center; font-size: .9rem;
  z-index: 1000; backdrop-filter: blur(4px);
  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
  border-bottom: 1px solid rgba(255, 255, 255, .25);
  pointer-events: none; min-height: 2.25rem;
}

/* ========== Background Layers ========== */
#bgColor, #bgBreath {
  position: fixed; inset: 0; z-index: 0; pointer-events: none;
}
#bgColor { transition: background-color 1.2s ease; background-color: var(--bg-color); }
#bgColor::after { content: ""; position: absolute; inset: 0; pointer-events: none; }
body.version-A #bgColor::after {
  background: linear-gradient(to bottom, rgba(255,255,255,var(--veilA-top)), rgba(255,255,255,var(--veilA-bottom)));
}
body.version-B #bgColor::after,
body.version-T #bgColor::after {
  background: linear-gradient(to bottom, rgba(0,0,0,var(--veilB-top)), rgba(0,0,0,var(--veilB-bottom)));
}
#bgBreath {
  background: radial-gradient(ellipse at center, rgba(255, 225, 170, .9) 0%, transparent 70%);
  animation: breath 12s ease-in-out infinite; opacity: 0; transition: opacity 1.5s; animation-play-state: paused;
}
#bgBreath.active { animation-play-state: running; opacity: .2; }
@keyframes breath { 50% { transform: scale(1.05); } }
@supports(width:100dvw){ #bgColor, #bgBreath { width: 100dvw; height: 100dvh; } }
@supports not (width:100dvw){ #bgColor, #bgBreath { width: 100vw; height: 100vh; } }

/* ========== Content (scene surface) ========== */
#content {
  position: relative; z-index: 1; width: 100%; max-width: 600px; margin: 0 auto; text-align: center;
  min-height: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center;
  padding: calc(env(safe-area-inset-top, 0px) + 0px) 0 calc(env(safe-area-inset-bottom, 0px) + 0px);
}
@supports (height: 100dvh){ #content { min-height: 100%; } }

/* Theme shadows */
.title, .title_key, .section-tag, .symbol, .narr { transition: text-shadow .8s; }
body.version-A .title, body.version-A .title_key, body.version-A .section-tag, body.version-A .symbol, body.version-A .narr { text-shadow: var(--shadow-A); }
body.version-B .title, body.version-B .title_key, body.version-B .section-tag, body.version-B .symbol, body.version-B .narr,
body.version-T .title, body.version-T .title_key, body.version-T .section-tag, body.version-T .symbol, body.version-T .narr { text-shadow: var(--shadow-B); }

/* Scene block */
.scene { width: 90%; margin: 0 auto; animation: fadeIn 700ms ease-out; }
@keyframes fadeIn { from { opacity: 0; transform: translateY(20px);} to { opacity: 1; transform: translateY(0);} }

/* Section Tags (1行固定・チップ単位) */
.section-tags {
  display: flex; flex-wrap: nowrap; align-items: center; justify-content: center; gap: .35em;
  margin-bottom: var(--section-tag-gap-bottom);
}
/* 単一タグ：中央寄せ・ellipsis */
.section-tags.single .section-tag {
  flex: 0 1 auto; min-width: 0;
  max-inline-size: clamp(10ch, 80vw, 28ch);
  overflow: hidden; text-overflow: ellipsis;
}
/* Section Tag (chip) */
.section-tag {
  display: inline-flex; align-items: center; gap: .35em;
  padding: .2rem .6rem; margin: 0; font-weight: 700; letter-spacing: .02em; line-height: 1.1;
  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  font-size: clamp(var(--section-tag-min), var(--section-tag-fluid), var(--section-tag-max));
  border-radius: var(--tag-radius);
  background: var(--tagchip-bg); border: 1px solid var(--tagchip-stroke); color: var(--tagchip-fg);
  box-shadow: 0 1px 2px rgba(0, 0, 0, var(--tag-shadow-alpha));
  flex: none; white-space: nowrap; text-align: center; max-width: 100%;
}
@supports not (color: color-mix(in srgb, red, blue)) {
  .section-tag { background: rgba(0, 0, 0, .06); }
}
/* OKLCH + color-mix が使える環境では“知覚明度”で安全側へ再定義 */
@supports (color: oklch(60% 0 0)) and (color: color-mix(in oklch, white, black)) {
  :root{
    --tagchip-bg:     color-mix(in oklch, var(--bg-color) 65%, white);
    --tagchip-stroke: color-mix(in oklch, var(--bg-color) 45%, white);
  }
}
/* 高コントラスト希望環境で押し上げ */
@media (prefers-contrast: more){
  @supports (color: color-mix(in oklch, white, black)){
    :root{
      --tagchip-bg:     color-mix(in oklch, var(--bg-color) 55%, white);
      --tagchip-stroke: color-mix(in oklch, var(--bg-color) 35%, white);
    }
  }
}

/* Titles & Narration */
.title_key {
  font-family: 'Shippori Mincho', serif; font-weight: 700; letter-spacing: .08em;
  margin-bottom: var(--title-key-gap-bottom, .5rem);
  font-size: clamp(1.25rem, 3.8vw, 1.8rem);
}
.title {
  font-family: 'Shippori Mincho', serif; font-weight: 700; letter-spacing: .08em;
  margin-bottom: var(--title-gap-bottom, 1rem);
  font-size: clamp(1.6rem, 5vw, 2.4rem);
}
.narr {
  font-size: clamp(1rem, 2.2vw, 1.15rem); line-height: 1.8; white-space: pre-line; margin-bottom: 1rem;
}

/* ========== Symbol Band (full-bleed) ========== */
.symbol-bg {
  position: relative; z-index: 0; width: 100%;
  margin-block: var(--symbol-outer-gap-y);
  padding: calc(1.5rem + var(--symbol-inner-gap-y)) 0;
  display: flex; justify-content: center; align-items: center; text-align: center;
}
.symbol-bg::before {
  content: ""; position: absolute; inset: 0; left: 50%; transform: translateX(-50%); width: 100vw;
  background-color: var(--symbol-bg-color);
  filter: brightness(var(--band-brightness)) saturate(var(--band-sat));
  transition: background-color 1.2s ease, filter 1.2s ease;
  z-index: -1; pointer-events: none;
}
@supports(width:100dvw){ .symbol-bg::before { width: 100dvw; } }
.symbol-bg::after {
  content: ""; position: absolute; inset: 0; left: 50%; transform: translateX(-50%); width: 100vw;
  pointer-events: none; z-index: -1; background-repeat: no-repeat; background-position: top left, bottom left;
  background-size: 100% var(--band-line-width), 100% var(--band-line-width);
}
@supports(width:100dvw){ .symbol-bg::after { width: 100dvw; } }
body.version-A .symbol-bg::after {
  background-image:
    linear-gradient(to bottom, rgba(0,0,0,var(--band-line-alpha-A)), rgba(0,0,0,var(--band-line-alpha-A))),
    linear-gradient(to top,    rgba(0,0,0,var(--band-line-alpha-A)), rgba(0,0,0,var(--band-line-alpha-A)));
}
body.version-B .symbol-bg::after,
body.version-T .symbol-bg::after {
  background-image:
    linear-gradient(to bottom, rgba(255,255,255,var(--band-line-alpha-B)), rgba(255,255,255,var(--band-line-alpha-B))),
    linear-gradient(to top,    rgba(255,255,255,var(--band-line-alpha-B)), rgba(255,255,255,var(--band-line-alpha-B)));
}
/* Emoji */
.symbol { font-size: clamp(4rem, 20vw, 8rem); line-height: 1.05; white-space: nowrap; display: inline-block; padding-bottom: .08em; }

/* ========== Activation Gate (Overlay) ========== */
#activation-gate {
  position: fixed; inset: 0; z-index: 2147483647; /* Debugより上 */
  display: flex; align-items: center; justify-content: center;
  background: rgba(0,0,0,0.6); backdrop-filter: blur(4px);
  cursor: pointer; transition: opacity .4s ease, visibility .4s;
}
#activation-gate.is-closing { opacity: 0; visibility: hidden; pointer-events: none; }
.gate-icon { color: #fff; font-size: 4rem; text-shadow: 0 0 15px rgba(0,0,0,.7); }

/* ========== Effects (overlay) ========== */
.effect-container { position: fixed; inset: 0; z-index: 3; pointer-events: none; }
@keyframes sk-light-in { 0%{opacity:1;background:radial-gradient(circle at center,white 0%,black 100%);} 100%{opacity:0;background:radial-gradient(circle at center,white 200%,black 300%);} }
.light-in { animation: sk-light-in 1.5s ease-out forwards; }
@keyframes sk-flame-out { 0%{opacity:0;} 50%{opacity:1;} 100%{opacity:0;} }
.flame-out, .burn-out { background: radial-gradient(circle at bottom, #ff4800 0%, #ff7400 30%, #ffb300 60%, transparent 100%); animation: sk-flame-out 1.5s ease-in forwards; }
@keyframes flash { 0%{opacity:.9;} 100%{opacity:0;} }
.flash { background: #fff; animation: flash .4s ease-out; }

/* =========================================================
   Debug UI (SCOPED) —— QuickBar(2 rows) & Expanded panel
   ========================================================= */

/* Host（両ID対応。JSは style を付けない前提でもOK） */
:is(#debug-panel, #debugPanel) {
  position: fixed; left: 0; right: 0; bottom: 0; z-index: 2147483646; color: #fff;
  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  padding-left: env(safe-area-inset-left, 0px);
  padding-right: env(safe-area-inset-right, 0px);
  padding-bottom: calc(8px + max(var(--sa-bottom), var(--host-bias-bottom)));
  will-change: transform; width: 100%; box-sizing: border-box; pointer-events: auto;
  background: var(--dbg-panel-bg);
}

/* QuickBar (2 rows) */
:is(#debug-panel, #debugPanel) .qb-bar {
  display: grid; grid-template-rows: var(--qb-row-h) var(--qb-row-h);
  row-gap: var(--qb-gap-y); column-gap: var(--qb-gap-x);
  padding: 6px 8px; background: transparent; border-top: 1px solid rgba(255,255,255,.15);
  backdrop-filter: blur(4px);
}
:is(#debug-panel, #debugPanel) .qb-row { min-height: var(--qb-row-h); display: flex; align-items: center; gap: 8px; flex-wrap: nowrap; }
:is(#debug-panel, #debugPanel) .qb-row.row2 { justify-content: flex-start; }

/* Toggle */
:is(#debug-panel, #debugPanel) .dbg-toggle {
  display: inline-flex; align-items: center; gap: .35em;
  padding: .5rem .8rem; border-radius: 16px; border: 1px solid rgba(255,255,255,.35);
  background: rgba(255,255,255,.08); color: #fff; font-size: 16px; line-height: 1; cursor: pointer;
}
:is(#debug-panel, #debugPanel) .dbg-toggle:focus-visible,
:is(#debug-panel, #debugPanel) .qb-btn:focus-visible,
:is(#debug-panel, #debugPanel) .dbg-controls button:focus-visible,
:is(#debug-panel, #debugPanel) .goto input:focus-visible {
  outline: 2px solid rgba(255,255,255,.9); outline-offset: 2px;
}

/* Square buttons */
:is(#debug-panel, #debugPanel) .qb-btn {
  width: 44px; height: 44px; border-radius: 10px;
  display: inline-flex; align-items: center; justify-content: center;
  border: 1px solid rgba(255,255,255,.35); background: rgba(255,255,255,.08); color: #fff; font-size: 20px; cursor: pointer;
}
:is(#debug-panel, #debugPanel) .qb-btn.play { border-color: rgba(0,200,255,.55); background: rgba(0,200,255,.15); }
:is(#debug-panel, #debugPanel) .qb-btn.stop { border-color: rgba(255,120,120,.55); background: rgba(255,120,120,.15); }
:is(#debug-panel, #debugPanel) .qb-btn.next { border-color: rgba(160,120,255,.55); background: rgba(160,120,255,.15); }

/* Row2 status text */
:is(#debug-panel, #debugPanel) .dbg-status {
  font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace; font-size: 14px; color: #fff; opacity: .95;
  min-width: 0; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
}

/* ------- Expanded body ------- */
:is(#debug-panel, #debugPanel) .dbg-body {
  max-height: 44vh; overflow: auto; padding: 8px;
  background: rgba(0, 0, 0, .70); border-top: 1px solid rgba(255, 255, 255, .15);
}
:is(#debug-panel, #debugPanel)[data-collapsed="true"] .dbg-body { display: none; }

/* Lab badges */
:is(#debug-panel, #debugPanel) .lab-badges {
  display: flex; align-items: center; gap: var(--chip-gap); flex-wrap: wrap; margin: 2px 0 8px 0;
}
:is(#debug-panel, #debugPanel) .lab-badge {
  display: inline-flex; align-items: center; gap: .5em;
  padding: var(--chip-pad-y) var(--chip-pad-x); border-radius: var(--chip-radius);
  font-weight: var(--chip-weight); font-size: 12px; line-height: 1; letter-spacing: .02em;
  border: 1px solid transparent; color: var(--chip-fg); text-shadow: none; white-space: nowrap; box-shadow: var(--chip-shadow);
  opacity: .65;
}
:is(#debug-panel, #debugPanel) .lab-badge.on { opacity: 1; }
:is(#debug-panel, #debugPanel) .lab-badge.lab-badge--speaking { background: var(--chip-speaking-bg); border-color: var(--chip-speaking-bd); color: var(--chip-speaking-fg); }
:is(#debug-panel, #debugPanel) .lab-badge.lab-badge--paused   { background: var(--chip-paused-bg);   border-color: var(--chip-paused-bd);   color: var(--chip-paused-fg); }
:is(#debug-panel, #debugPanel) .lab-badge.lab-badge--pending  { background: var(--chip-pending-bg);  border-color: var(--chip-pending-bd);  color: var(--chip-pending-fg); }

/* Pulse animation */
:is(#debug-panel, #debugPanel) .lab-badge.on.pulse { animation: labPulse 1.2s ease-in-out infinite; }
@keyframes labPulse { 0%{ box-shadow:0 0 0 0 rgba(255,255,255,.45);} 70%{ box-shadow:0 0 0 6px rgba(255,255,255,0);} 100%{ box-shadow:0 0 0 0 rgba(255,255,255,0);} }
@media (prefers-reduced-motion: reduce) { :is(#debug-panel, #debugPanel) .lab-badge.on.pulse { animation: none; } }

/* QuickBar ACK */
:is(#debug-panel, #debugPanel) .qb-ack {
  display: inline-flex; align-items: center; gap: .5em; padding: .5rem .9rem;
  border-radius: 999px; font-weight: 700; font-size: 14px; line-height: 1;
  background: rgba(255,255,255,.10); border: 1px solid rgba(255,255,255,.22); color: #fff;
}
:is(#debug-panel, #debugPanel) .qb-ack.is-pending { background:#7c2d12; border-color:#b45309; }
:is(#debug-panel, #debugPanel) .qb-ack.is-stopped { background:#14532d; border-color:#15803d; }
:is(#debug-panel, #debugPanel) .qb-ack .qb-dot { width:.62em; height:.62em; border-radius:50%; background: currentColor; opacity:.95; }

/* Controls row in expanded panel */
:is(#debug-panel, #debugPanel) .dbg-controls {
  display: flex; flex-wrap: wrap; align-items: center; gap: 8px; margin: 6px 0;
}
:is(#debug-panel, #debugPanel) .dbg-controls button {
  appearance: none; border: 1px solid rgba(255,255,255,.35); background: rgba(255,255,255,.08); color: #fff;
  padding: 6px 12px; border-radius: 8px; cursor: pointer; font-size: 14px; line-height: 1;
}
:is(#debug-panel, #debugPanel) .dbg-controls button.warn {
  background: #fff5f5; border-color: #ffd5d5; color: #b00020;
}
:is(#debug-panel, #debugPanel) .goto { display: inline-flex; align-items: center; gap: 6px; margin-left: 4px; color: #fff; }
:is(#debug-panel, #debugPanel) .goto input {
  width: 72px; padding: 6px 8px; border-radius: 6px; border: 1px solid rgba(255,255,255,.25);
  background: rgba(0,0,0,.2); color: #fff; font-size: 14px;
}

/* ===== Voices section ===== */
:is(#debug-panel, #debugPanel) .sec h3 { margin: 6px 0 4px 0; font-size: 12px; opacity: .75; color: #fff; }
/* ▼ 汎用 .sec .dbg-row の縦マージンを Voices 限定へ変更（回帰防止の要） */
:is(#debug-panel, #debugPanel) #dbg-voices .dbg-row { display: flex; align-items: center; gap: 8px; margin: 4px 0; color: #fff; }
:is(#debug-panel, #debugPanel) .sec .dbg-row-label { opacity: .7; min-width: 72px; }
:is(#debug-panel, #debugPanel) .voices-note { opacity: .7; font-size: 12px; color: #fff; }
:is(#debug-panel, #debugPanel) .sec h3 .voices-note { margin-left: .4em; font-weight: 400; }

/* ===== TTS flags section (NEW) ===== */
:is(#debug-panel, #debugPanel) #dbg-flags h3 {
  margin: 6px 0 4px 0; font-size: 12px; opacity: .75; color: #fff;
}
/* 行間は gap で管理。縦マージンは最小限（外側のみ） */
:is(#debug-panel, #debugPanel) #dbg-flags .flag-row {
  display: flex; align-items: center; flex-wrap: wrap;
  gap: var(--chip-gap); margin: 4px 0 6px;
}
/* 念のため将来の回帰を抑止（.dbg-row が紛れ込んでも余白ゼロ） */
:is(#debug-panel, #debugPanel) #dbg-flags .dbg-row { margin: 0; }
/* ピル型ボタン */
:is(#debug-panel, #debugPanel) #dbg-flags .flag {
  appearance: none;
  border: 1px solid var(--flag-off-bd);
  background: var(--flag-off-bg);
  color: var(--flag-off-fg);
  padding: .38rem .8rem; border-radius: 999px;
  font-weight: 700; font-size: 13px; line-height: 1; letter-spacing: .02em;
  cursor: pointer; transition: transform .05s ease;
}
:is(#debug-panel, #debugPanel) #dbg-flags .flag:hover { filter: brightness(1.1); }
:is(#debug-panel, #debugPanel) #dbg-flags .flag:active { transform: translateY(1px); }
:is(#debug-panel, #debugPanel) #dbg-flags .flag.on {
  background: var(--flag-on-bg);
  border-color: var(--flag-on-bd);
  color: var(--flag-on-fg);
  box-shadow: 0 0 0 2px rgba(255,255,255,.08) inset;
}
:is(#debug-panel, #debugPanel) #dbg-flags .flag:focus-visible {
  outline: 2px solid rgba(255,255,255,.9); outline-offset: 2px;
}

/* 折り畳み時：バー以外クリック透過（Playボタン保護） */
:is(#debug-panel, #debugPanel).collapsed { pointer-events: none; }
:is(#debug-panel, #debugPanel).collapsed .qb-bar { pointer-events: auto; }

/* High contrast emphasis */
@media (prefers-contrast: more) {
  :is(#debug-panel, #debugPanel) .lab-badge { box-shadow: 0 0 0 2px rgba(0,0,0,.35) inset; }
  :is(#debug-panel, #debugPanel) .lab-badge.lab-badge--speaking { background: #166534; border-color:#065f46; }
  :is(#debug-panel, #debugPanel) .lab-badge.lab-badge--paused   { background: #92400e; border-color:#7c2d12; }
  :is(#debug-panel, #debugPanel) .lab-badge.lab-badge--pending  { background: #1e40af; border-color:#1e3a8a; }
}

/* ========== Optional FX Canvas ========== */
#bgFX { position: fixed; inset: 0; z-index: 0; pointer-events: none; mix-blend-mode: screen; opacity: .9; }
@media (prefers-reduced-motion:reduce){ #bgFX { display: none; } }
body.version-B #bgFX, body.version-T #bgFX { mix-blend-mode: lighten; opacity: .7; }

/* ========== Mobile-friendly input sizing ========== */
input, select, textarea, button { font-size: 16px; min-height: 44px; }
