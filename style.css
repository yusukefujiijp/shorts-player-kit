/*!
Project: shorts-player-kit
File:    ./style.css
Role:    Visual-only (veils/band/typography/effects + Debug Panel polish)
Depends: body.version-(A|B|T), --symbol-bg-color (JS supplies)

Refactor notes:
- #dbg-status を正しくスタイルできるようセレクタを `.dbg-status` → `#dbg-status` に整理
- Debugバッジ（speaking/paused/pending）の配色・コントラストを強化
- prefers-reduced-motion / prefers-contrast を尊重
- debug_panel.js が注入する最小CSSよりも高い詳細度で上書き（衝突回避）
*/

/* ========== Variables ========== */
:root{
  /* Text & shadow (A=light / B=dark) */
  --txt-A:#2c2c2c; --bg-A:#f9f9f7; --shadow-A:1px 1px 3px rgba(0,0,0,.25);
  --txt-B:#eaeaec; --bg-B:#1c1c1e; --shadow-B:0 0 8px rgba(255,255,255,.25);

  /* Band color from JS */
  --symbol-bg-color: transparent;

  /* Band tone tweak */
  --band-brightness:.92;
  --band-sat:1.06;

  /* Hairlines (上下1px) */
  --band-line-width:1px;
  --band-line-alpha-A:.06;
  --band-line-alpha-B:.12;

  /* Section tag (#Trivia N) */
  --section-tag-gap-bottom:.5rem;
  --section-tag-min:.8rem; --section-tag-fluid:2.2vw; --section-tag-max:1.0rem;
  --tag-radius:999px; --tag-bg-alpha:.14;
  --tag-border-alpha-A:.10; --tag-border-alpha-B:.18; --tag-shadow-alpha:.12;

  /* Band paddings */
  --symbol-outer-gap-y:1rem; --symbol-inner-gap-y:.30rem;

  /* Veils (A=薄明 / B,T=半暗) */
  --veilA-top:.12; --veilA-bottom:.06;
  --veilB-top:.32; --veilB-bottom:.18;

  /* ==== Debug Chips (state badges) ==== */
  --chip-fg:#ffffff;
  --chip-gap:8px;
  --chip-pad-y:.28rem;
  --chip-pad-x:.6rem;
  --chip-radius:999px;
  --chip-weight:700;
  --chip-shadow:0 0 0 rgba(0,0,0,0);

  /* speaking / paused / pending colors (dark panel上で十分コントラストを確保) */
  --chip-speaking-bg:#15803d; /* green-700 */
  --chip-speaking-bd:#065f46;
  --chip-speaking-fg:#ffffff;

  --chip-paused-bg:#b45309;   /* amber-700 */
  --chip-paused-bd:#92400e;
  --chip-paused-fg:#ffffff;

  --chip-pending-bg:#1d4ed8;  /* blue-700 */
  --chip-pending-bd:#1e40af;
  --chip-pending-fg:#ffffff;
}

/* ========== Reset ========== */
*{ box-sizing:border-box; margin:0; padding:0; }

/* ========== Root ========== */
html,body{
  width:100%;
  overflow:hidden;
  font-family:'Noto Sans JP',system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,"Apple Color Emoji","Segoe UI Emoji";
  transition:color .8s, background-color 1.2s;
  touch-action:manipulation;
}
body{ background-color:var(--bg-A); } /* 初期フォールバック */

/* ========== Layout ========== */
#wrapper{
  position:relative; z-index:1;
  width:100%; height:100dvh;
  display:flex; flex-direction:column; justify-content:center; align-items:center;
}

/* Banner (non-intercept overlay) */
#banner{
  position:fixed; top:0; left:0; right:0; width:100%;
  padding:calc(.5rem + env(safe-area-inset-top,0px)) .5rem .5rem;
  background:rgba(0,0,0,.30); color:#fff; text-align:center;
  font-size:.9rem; z-index:1000; backdrop-filter:blur(4px);
  text-shadow:-1px -1px 0 #000,1px -1px 0 #000,-1px 1px 0 #000,1px 1px 0 #000;
  border-bottom:1px solid rgba(255,255,255,.25);
  pointer-events:none; min-height:2.25rem;
}

/* ========== Background Layers ========== */
#bgColor,#bgBreath{ position:fixed; inset:0; z-index:0; pointer-events:none; }
#bgColor{ transition:background-color 1.2s ease; }

#bgColor::after{ content:""; position:absolute; inset:0; pointer-events:none; }
body.version-A #bgColor::after{
  background:linear-gradient(to bottom,
    rgba(255,255,255,var(--veilA-top)),
    rgba(255,255,255,var(--veilA-bottom)));
}
body.version-B #bgColor::after,
body.version-T #bgColor::after{
  background:linear-gradient(to bottom,
    rgba(0,0,0,var(--veilB-top)),
    rgba(0,0,0,var(--veilB-bottom)));
}

/* Breathing halo */
#bgBreath{
  background:radial-gradient(ellipse at center, rgba(255,225,170,.9) 0%, transparent 70%);
  animation:breath 12s ease-in-out infinite;
  opacity:0; transition:opacity 1.5s; animation-play-state:paused;
}
#bgBreath.active{ animation-play-state:running; opacity:.2; }
@keyframes breath{ 50%{ transform:scale(1.05);} }

@supports(width:100dvw){
  #bgColor,#bgBreath{ width:100dvw; height:100dvh; }
}
@supports not (width:100dvw){
  #bgColor,#bgBreath{ width:100vw; height:100vh; }
}

/* ========== Content (scene surface) ========== */
#content{ width:100%; max-width:600px; text-align:center; }

/* Theme shadows */
.title,.title_key,.section-tag,.symbol,.narr{ transition:text-shadow .8s; }
body.version-A .title,body.version-A .title_key,body.version-A .section-tag,
body.version-A .symbol,body.version-A .narr{ text-shadow:var(--shadow-A); }
body.version-B .title,body.version-B .title_key,body.version-B .section-tag,
body.version-B .symbol,body.version-B .narr,
body.version-T .title,body.version-T .title_key,body.version-T .section-tag,
body.version-T .symbol,body.version-T .narr{ text-shadow:var(--shadow-B); }

/* Scene block */
.scene{ width:90%; margin:0 auto; animation:fadeIn 700ms ease-out; }
@keyframes fadeIn{ from{opacity:0; transform:translateY(20px);} to{opacity:1; transform:translateY(0);} }

/* Section Tag */
.section-tag{
  display:inline-flex; align-items:center; gap:.35em;
  padding:.2rem .6rem; margin-bottom:var(--section-tag-gap-bottom);
  font-weight:700; letter-spacing:.02em; line-height:1.1;
  font-family:ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
  font-size:clamp(var(--section-tag-min), var(--section-tag-fluid), var(--section-tag-max));
  border-radius:var(--tag-radius);
  background: color-mix(in srgb, var(--symbol-bg-color) calc(var(--tag-bg-alpha)*100%), transparent);
  box-shadow:0 1px 2px rgba(0,0,0,var(--tag-shadow-alpha));
}
@supports not (color: color-mix(in srgb, red, blue)){
  .section-tag{ background:rgba(0,0,0,.06); }
}
body.version-A .section-tag{
  color:var(--txt-A); border:1px solid rgba(0,0,0,var(--tag-border-alpha-A));
}
body.version-B .section-tag, body.version-T .section-tag{
  color:var(--txt-B); border:1px solid rgba(255,255,255,var(--tag-border-alpha-B));
}

/* Titles & Narration */
.title_key{
  font-family:'Shippori Mincho', serif; font-weight:700; letter-spacing:.08em;
  margin-bottom:var(--title-key-gap-bottom, .5rem);
  font-size:clamp(1.25rem, 3.8vw, 1.8rem);
}
.title{
  font-family:'Shippori Mincho', serif; font-weight:700; letter-spacing:.08em;
  margin-bottom:var(--title-gap-bottom, 1rem);
  font-size:clamp(1.6rem, 5vw, 2.4rem);
}
.narr{
  font-size:clamp(1rem, 2.2vw, 1.15rem);
  line-height:1.8; white-space:pre-line; margin-bottom:1rem;
}

/* ========== Symbol Band (full-bleed) ========== */
.symbol-bg{
  position:relative; z-index:0; width:100%;
  margin-block:var(--symbol-outer-gap-y);
  padding:calc(1.5rem + var(--symbol-inner-gap-y)) 0;
  display:flex; justify-content:center; align-items:center; text-align:center;
}
.symbol-bg::before{
  content:""; position:absolute; inset:0; left:50%; transform:translateX(-50%);
  width:100vw; background-color:var(--symbol-bg-color);
  filter:brightness(var(--band-brightness)) saturate(var(--band-sat));
  transition:background-color 1.2s ease, filter 1.2s ease;
  z-index:-1; pointer-events:none;
}
@supports(width:100dvw){ .symbol-bg::before{ width:100dvw; } }
.symbol-bg::after{
  content:""; position:absolute; inset:0; left:50%; transform:translateX(-50%);
  width:100vw; pointer-events:none; z-index:-1;
  background-repeat:no-repeat; background-position:top left, bottom left;
  background-size:100% var(--band-line-width), 100% var(--band-line-width);
}
@supports(width:100dvw){ .symbol-bg::after{ width:100dvw; } }
body.version-A .symbol-bg::after{
  background-image:
    linear-gradient(to bottom, rgba(0,0,0,var(--band-line-alpha-A)), rgba(0,0,0,var(--band-line-alpha-A))),
    linear-gradient(to top,    rgba(0,0,0,var(--band-line-alpha-A)), rgba(0,0,0,var(--band-line-alpha-A)));
}
body.version-B .symbol-bg::after,
body.version-T .symbol-bg::after{
  background-image:
    linear-gradient(to bottom, rgba(255,255,255,var(--band-line-alpha-B)), rgba(255,255,255,var(--band-line-alpha-B))),
    linear-gradient(to top,    rgba(255,255,255,var(--band-line-alpha-B)), rgba(255,255,255,var(--band-line-alpha-B)));
}

/* Emoji */
.symbol{
  font-size:clamp(4rem, 20vw, 8rem);
  line-height:1.05; white-space:nowrap; display:inline-block; padding-bottom:.08em;
}

/* ========== Play Button ========== */
.playBtn{
  position:absolute; top:50%; left:50%;
  --btn-scale:1; transform:translate(-50%,-50%) scale(var(--btn-scale));
  width:100px; height:100px; border-radius:50%;
  background:rgba(0,0,0,.12); color:#777; font-size:3rem; cursor:pointer;
  backdrop-filter:blur(4px); transition:opacity .3s, transform .3s;
  z-index:2; border:2px solid rgba(255,255,255,.4);
  text-shadow:0 0 15px rgba(0,0,0,.7);
}
.playBtn:hover{ --btn-scale:1.1; background:rgba(255,255,255,.25); }
.playBtn.hidden{ opacity:0; pointer-events:none; transform:translate(-50%,-50%) scale(.5); }

/* ========== Effects (overlay) ========== */
.effect-container{ position:fixed; inset:0; z-index:3; pointer-events:none; }
@keyframes sk-light-in {
  0%{ opacity:1; background:radial-gradient(circle at center, white 0%, black 100%); }
  100%{ opacity:0; background:radial-gradient(circle at center, white 200%, black 300%); }
}
.light-in{ animation: sk-light-in 1.5s ease-out forwards; }
@keyframes sk-flame-out { 0%{opacity:0;} 50%{opacity:1;} 100%{opacity:0;} }
.flame-out, .burn-out{
  background:radial-gradient(circle at bottom, #ff4800 0%, #ff7400 30%, #ffb300 60%, transparent 100%);
  animation:sk-flame-out 1.5s ease-in forwards;
}
@keyframes flash{ 0%{opacity:.9;} 100%{opacity:0;} }
.flash{ background:#fff; animation:flash .4s ease-out; }

/* ========== Debug Panel (safe-area pin; 見た目のみ) ========== */
#debug-panel{
  padding-left:max(10px, env(safe-area-inset-left,0px));
  padding-right:max(10px, env(safe-area-inset-right,0px));
  padding-bottom:calc(8px + env(safe-area-inset-bottom,0px));
  will-change:transform;
}
#debug-panel .dbg-bar{
  display:flex; align-items:center; gap:8px; flex-wrap:wrap;
  padding:6px 8px; background:rgba(0,0,0,.82);
  border-top:1px solid rgba(255,255,255,.15); backdrop-filter:blur(4px);
}

/* ←ここを修正: #dbg-status を厳密指定（以前は .dbg-status で一致しない可能性があった） */
#debug-panel #dbg-status{
  display:flex; align-items:center; gap:var(--chip-gap); flex-wrap:wrap;
  font-size:12px; opacity:.95;
}

/* Buttons / inputs (視認性向上: focus-ring) */
#debug-panel button,
#debug-panel input,
#debug-panel select{
  font-size:16px; min-height:44px;
}
#debug-panel button:focus-visible,
#debug-panel input:focus-visible,
#debug-panel select:focus-visible{
  outline:2px solid rgba(255,255,255,.9);
  outline-offset:2px;
}

/* Controls row（展開時のボディ） */
#debug-panel .dbg-body{
  max-height:44vh; overflow:auto;
  padding:8px; background:rgba(0,0,0,.70);
  border-top:1px solid rgba(255,255,255,.15);
}

/* Note / rows / buttons */
#debug-panel .dbg-row{ display:flex; flex-wrap:wrap; align-items:center; gap:8px; margin:6px 0; }
#debug-panel .dbg-note{
  width:100%; padding:6px 8px;
  background:rgba(255,255,255,.08);
  border:1px solid rgba(255,255,255,.18);
  border-radius:6px; font-size:12px; line-height:1.5; white-space:pre-wrap; margin:6px 0;
}
#debug-panel .dbg-buttons>button{
  appearance:none; border:1px solid rgba(255,255,255,.35);
  background:rgba(255,255,255,.08); color:#fff;
  padding:4px 10px; border-radius:6px; cursor:pointer; font-size:12px; line-height:1;
}
#debug-panel .dbg-buttons>button:hover{ background:rgba(255,255,255,.15); }
#debug-panel .dbg-buttons>button.accent-cyan{
  border-color:rgba(0,200,255,.55); background:rgba(0,200,255,.15);
}
#debug-panel .dbg-buttons>button.accent-red{
  border-color:rgba(255,120,120,.55); background:rgba(255,120,120,.15);
}

/* Goto field */
#debug-panel .goto{ display:inline-flex; align-items:center; gap:4px; margin-left:4px; }
#debug-panel .goto input{
  width:64px; padding:4px 6px; border-radius:4px; border:1px solid rgba(255,255,255,.25);
  background:rgba(0,0,0,.2); color:#fff; font-size:12px;
}

/* 折り畳み時：バー以外クリック透過（Playボタン保護） */
#debug-panel.collapsed{ pointer-events:none; }
#debug-panel.collapsed .dbg-bar{ pointer-events:auto; }

/* ====== State Chips / Badges ====== */
/* debug_panel.js 注入CSSよりも詳細度を上げて上書きするため .dbg-bar を挟む */
#debug-panel .dbg-bar .dbg-chip,
#debug-panel .dbg-bar .dbg-badge{
  display:inline-flex; align-items:center; gap:.5em;
  padding:var(--chip-pad-y) var(--chip-pad-x);
  border-radius:var(--chip-radius);
  font-weight:var(--chip-weight); font-size:12px; line-height:1;
  letter-spacing:.02em;
  border:1px solid transparent;
  color:var(--chip-fg);
  text-shadow:none; white-space:nowrap;
  box-shadow:var(--chip-shadow);
}

/* speaking / paused / pending */
#debug-panel .dbg-bar .dbg-chip.speaking,
#debug-panel .dbg-bar .dbg-badge.speaking{
  background:var(--chip-speaking-bg); border-color:var(--chip-speaking-bd); color:var(--chip-speaking-fg);
}
#debug-panel .dbg-bar .dbg-chip.paused,
#debug-panel .dbg-bar .dbg-badge.paused{
  background:var(--chip-paused-bg); border-color:var(--chip-paused-bd); color:var(--chip-paused-fg);
}
#debug-panel .dbg-bar .dbg-chip.pending,
#debug-panel .dbg-bar .dbg-badge.pending{
  background:var(--chip-pending-bg); border-color:var(--chip-pending-bd); color:var(--chip-pending-fg);
}

/* 状態ON/OFF 旧式クラスとの互換（.on/.off） */
#debug-panel .dbg-bar .dbg-badge.on{ filter:brightness(1.0) saturate(1.0); }
#debug-panel .dbg-bar .dbg-badge.off{
  background:#fde7e9; color:#a61b2b; border-color:#f4c2c7;
}

/* 小さな丸アイコン（視覚的な“信号”） */
#debug-panel .dbg-bar .dbg-chip::before,
#debug-panel .dbg-bar .dbg-badge::before{
  content:""; width:.5em; height:.5em; border-radius:50%; background:currentColor; opacity:.9;
  box-shadow:0 0 0 1px rgba(0,0,0,.15) inset;
}
#debug-panel .dbg-bar .dbg-chip.paused::before,
#debug-panel .dbg-bar .dbg-badge.paused::before{ opacity:.9; }
#debug-panel .dbg-bar .dbg-chip.pending::before,
#debug-panel .dbg-bar .dbg-badge.pending::before{ opacity:.9; }

/* 脈動（config: motion='auto' 時に .pulse が付与される前提） */
@keyframes dbgPulse{ 0%{ box-shadow:0 0 0 0 rgba(19,115,51,.45);} 70%{ box-shadow:0 0 0 6px rgba(19,115,51,0);} 100%{ box-shadow:0 0 0 0 rgba(19,115,51,0);} }
#debug-panel .dbg-bar .dbg-badge.pulse.on{ animation:dbgPulse 1.2s ease-in-out infinite; }

/* 高コントラスト環境での強調 */
@media (prefers-contrast: more){
  #debug-panel .dbg-bar .dbg-chip,
  #debug-panel .dbg-bar .dbg-badge{
    box-shadow:0 0 0 2px rgba(0,0,0,.35) inset;
  }
  #debug-panel .dbg-bar .dbg-badge.speaking{ background:#166534; border-color:#065f46; }
  #debug-panel .dbg-bar .dbg-badge.paused{   background:#92400e; border-color:#7c2d12; }
  #debug-panel .dbg-bar .dbg-badge.pending{  background:#1e40af; border-color:#1e3a8a; }
}

/* 動きを苦手とする設定ではアニメ停止 */
@media (prefers-reduced-motion: reduce){
  #bgBreath{ animation:none; }
  #debug-panel .dbg-bar .dbg-badge.pulse.on{ animation:none; }
}

/* ========== Optional FX Canvas ========== */
#bgFX{ position:fixed; inset:0; z-index:0; pointer-events:none; mix-blend-mode:screen; opacity:.9; }
@media (prefers-reduced-motion:reduce){ #bgFX{ display:none; } }
body.version-B #bgFX, body.version-T #bgFX{ mix-blend-mode:lighten; opacity:.7; }

/* ========== Mobile-friendly input sizing (再掲) ========== */
input,select,textarea,button{ font-size:16px; min-height:44px; }

/* ===== QuickBar (Play/Stop + ACK) ===== */
#debug-panel .dbg-bar .dbg-qb{
  display:flex; align-items:center; gap:8px; margin-left:8px;
}
#debug-panel .dbg-bar .dbg-qb .qb-btn{
  appearance:none; border:1px solid rgba(255,255,255,.35);
  background:rgba(255,255,255,.08); color:#fff; border-radius:6px;
  cursor:pointer; font-size:14px; line-height:1;
  width:40px; height:34px; min-height:34px;
}
#debug-panel .dbg-bar .dbg-qb .qb-btn:focus-visible{
  outline:2px solid rgba(255,255,255,.9); outline-offset:2px;
}
#debug-panel .dbg-bar .dbg-qb .qb-play{
  border-color:rgba(0,200,255,.55); background:rgba(0,200,255,.18);
}
#debug-panel .dbg-bar .dbg-qb .qb-stop{
  border-color:rgba(255,120,120,.55); background:rgba(255,120,120,.18);
}
#debug-panel .dbg-bar .dbg-qb #dbg-ack-chip{
  margin-left:6px;
}
/* motion=auto で pending時に pulse+on が付く（reduced-motion では停止） */
@media (prefers-reduced-motion: reduce){
  #debug-panel .dbg-bar .dbg-qb #dbg-ack-chip.pulse.on{ animation:none; }
}
